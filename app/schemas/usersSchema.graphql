type User {
  id: ID
  name: String!
  last_name: String!
  email: String!
  document: String!
  password: String!
  location: Location
  distance: Float
}

type AuthorizationToken {
  token: String!
  user: User
}

input UserInputCreate {
  name: String!, 
  last_name: String!, 
  email: String!, 
  document: String!, 
  password: String!, 
  location: LocationInput
}

input UserInputUpdate {
    name: String,
    last_name: String,
    email: String,
    document: String,
    password: String,
    location: LocationInput
}

type Query {
  user(id: ID!): User
  users: [User]
  usersCount: Int
  nearestUsers(id: ID!, distance: Int): [User]

  currentUser: User
  nearestUsersOfMe(distance: Int): [User]
}

type Mutation {
  login(email: String!, password: String!): AuthorizationToken

  createUser(input: UserInputCreate!): User
  updateUser(id: ID!, input: UserInputUpdate): User

  updateMyLocation(input: LocationInput!): User
}